exports.execute = async (client, message, args) => {
  if (!client.config.miners.includes(message.author.id)) return;
  let users = ["Mining...", "Mining...", "Mining..", "Mining..."];
  let amount = Math.floor(Math.random() * 15000) + 5000;
  let president = await client.eco.beg(client.ecoAddUser, amount, {
    canLose: true,
    cooldown: 30000000,
    customName: "search"
  });
  if (president.onCooldown)
    return message.reply(
      `–¢–∞ —è–¥–∞—Ä—Å–∞–Ω –±–∞–π–Ω–∞ ${president.time.minutes} –º–∏–Ω—É—Ç  ${president.time.seconds} —Å–µ–∫—É–Ω–¥—ã–Ω –¥–∞—Ä–∞–∞ –∞–∂–∏–ª–∞–∞ —Ö–∏–π–≥—ç—ç—Ä—ç–π.`
    );
  if (president.lost)
    return message.channel.send(
      `**${
        users[Math.floor(Math.random() * users.length)]
      }:** —Ö–∞—Ä–∞–º—Å–∞–ª—Ç–∞–π –±–∞–π–Ω–∞ —Ç–∞ –º”©–Ω–≥”© –æ–ª–¥–≤–æ—Ä–ª–æ–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π`
    );
  else
    return message.reply(
      `**${
        users[Math.floor(Math.random() * users.length)]
      }** –∞–∂–∏–ª –∞–º–∂–∏–ª—Ç—Ç–∞–π **${president.amount}** üí∏. —ç–Ω—ç —Ç–∞–Ω—ã –æ–ª—Å–æ–Ω —Ü–∞–ª–∏–Ω **${
        president.after
      }** üí∏ —Ç–∞–Ω–∏–π –Ω–∏–π—Ç –º”©–Ω–≥”©.`
    );
};

exports.help = {
  name: "---------------–£—É—Ä—Ö–∞–π—á–∏–¥--------",
  aliases: ["president"],
  usage: "president"
};